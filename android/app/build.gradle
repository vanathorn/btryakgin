def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
   keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 31
    buildToolsVersion = "30.0.3"

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        configurations.all {
            //  resolutionStrategy { force 'com.google.android.gms:play-services-location:16.0.0' }        
            resolutionStrategy { force 'androidx.core:core-ktx:1.1.0' }
            //fixed androidx min sdk(31) more than this module
            //clear cash in  C:\Users\vanat\.gradle\caches\tranform 2.1
        }
        applicationId "com.butiron.yakgin"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 2
        versionName '1.0.2'
        multiDexEnabled true
    }
    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }
   buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            //*** แก้ปัญหา Unhandled exception: MissingPluginException(No implementation found for method getAll on channel
            // https://fluttercorner.com/flutter-unhandled-exception-missingpluginexceptionno-implementation-found-for/
            //shrinkResources false
            //minifyEnabled false
            //useProguard true
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-database:20.0.2'
    implementation 'com.android.support:multidex:2.0.1'  
    implementation 'com.google.firebase:firebase-auth:17.4.2'
    implementation 'com.google.firebase:firebase-analytics:16.0.9'

    // Import the Firebase BoM
    //x implementation platform('com.google.firebase:firebase-bom:29.1.0')

    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    //x implementation 'com.google.firebase:firebase-analytics-ktx'

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
}
apply plugin: 'com.google.gms.google-services'


